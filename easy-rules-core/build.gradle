import groovy.json.*
buildscript {
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
plugins {
    id "java" //need for the "from"
    id "org.jetbrains.kotlin.multiplatform"
    id "java-library"
    id "maven-publish"
    id "com.moowork.node"

}


kotlin {
    targets {
        println(presets.getAsMap().keySet())
        fromPreset(presets.jvm, "jvm") {
            compilations.all {
                tasks[compileKotlinTaskName].kotlinOptions {
                    jvmTarget = "1.8"
                }
            }
        }
        fromPreset(presets.js, "js") {
            compilations.all {
                tasks[compileKotlinTaskName].kotlinOptions {

                }
            }
        }
    }
    sourceSets {
        commonMain {
            kotlin.srcDir("src/main/java")
            resources.srcDir("src/main/resource")
            dependencies {
                implementation "io.github.microutils:kotlin-logging-common:$kotlin_logging_version"
                implementation "org.jetbrains.kotlin:kotlin-stdlib"
                implementation "org.jetbrains.kotlin:kotlin-test"
                implementation "org.jetbrains.kotlin:kotlin-stdlib-common"
                implementation "io.mockk:mockk:1.9"
            }
        }

        /*commonTest {
            kotlin.srcDir("src/test/java")
            dependencies {
                implementation "io.github.microutils:kotlin-logging:$kotlin_logging_version"
                implementation "org.jetbrains.kotlin:kotlin-stdlib"
                implementation "org.jetbrains.kotlin:kotlin-test"
                implementation "org.jetbrains.kotlin:kotlin-stdlib-common"
                implementation "io.mockk:mockk:1.9"
                implementation "io.mockk:mockk-common:1.9"
            //    implementation(project(":easy-rules-core"))
            }
        }*/


        jvmTest {//TODO : commonTest instead of jvmtest, wwhen mockk.js will be better at it
            kotlin.srcDir("src/test/java")
            dependencies {

                implementation "org.jetbrains.kotlin:kotlin-test-common"
                implementation "org.jetbrains.kotlin:kotlin-test-annotations-common"
                implementation "io.mockk:mockk-common:1.9"
            }
        }
        jvm {
            dependencies {
                implementation "io.github.microutils:kotlin-logging:$kotlin_logging_version"
                implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
                implementation "org.jetbrains.kotlin:kotlin-test-junit"

            }
        }

        jsMain {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlin_version"
                implementation "io.github.microutils:kotlin-logging-js:$kotlin_logging_version"
            }

        }


        metadata {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-stdlib-common:$kotlin_version"
                implementation "io.github.microutils:kotlin-logging-common:$kotlin_logging_version"
                implementation "org.jetbrains.kotlin:kotlin-test-common"
            }
        }
    }

    jvm {
        compilations.main.kotlinOptions {
            // Setup the Kotlin compiler options for the "main" compilation:
            jvmTarget = "1.8"
        }
        mavenPublication {
            artifactId project.name + "-jvm"
        }
//        preparePublishing(it,this)


    }
    js() {
        browser{}
        mavenPublication {
            artifactId project.name + "-js"
        }
        compilations.main.kotlinOptions {
            // Setup the Kotlin compiler options for the "main" compilation:
            moduleKind = "umd"
        }
      //  configurePublishingWithNPM(it, project.version, configurations,this)
    }
    metadata {
        mavenPublication {
            artifactId project.name + "-common"
        }
//        preparePublishing(it,this)
    }

}


task listrepos {
    doLast {
        println "Repositories:"
        project.repositories.each { println "Name: " + it.name + "; url: " + it.url }
    }
}
